---
/* This file is for rendering our background image */

import { Image } from 'astro:assets';
import { joinClasses } from '../utils/joinClasses';
type Props = { /* For type safety */
    classes: string;
    styles: string;
    url?: string; /* ? because this is an optional prop, that has to be of type string */
    height?: number;
    width?: number;
    dimRatio?: number;
    overlayColor?: string;
    customOverlayColor?: string;
    minHeight?: number;
    minHeightUnit?: string;
};
const {classes, styles, url, height, width, dimRatio = 50, overlayColor, customOverlayColor, minHeight, minHeightUnit } = Astro.props;

let minHeightValue  = ""
if(minHeight && minHeightUnit) {
    minHeightValue = `min-height: ${minHeight}${minHeightUnit}`;
}

let overlayStyle = "";
if(customOverlayColor){
    overlayStyle = `background: ${customOverlayColor}`;
} else {
    overlayStyle = `background: ${overlayColor}`;
}
---
<div class={joinClasses(classes, "relative")} style={styles}>
    {
        !!url && (
            <Image 
                class="absolute w-full object-cover h-full !max-w-full" 
                height={height || 1000} 
                width={width || 1000} 
                src={url} 
                alt=""
                />)};
    <div class="absolute top-0 right-0 bottom-0 left-0 bg-black !max-w-full !mt-0" style={`opacity: ${dimRatio / 100}; ${overlayStyle}`}></div>
    <div style={minHeightValue} class="z=10 relative !mt-0 min-h-[430px] flex flex-col justify-center">
        <slot />
    </div>
    
</div>