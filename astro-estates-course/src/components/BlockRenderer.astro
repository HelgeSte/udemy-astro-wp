---
import BlockRendererInner from './BlockRenderer.astro' /* we wan't to use this component to render the inner blocks too */
import {getBlockStyling} from "@wp-block-tools/styles"
import type {Block} from '@wp-block-tools/styles';
type Props = { /* typescript specific syntax, to specify Props type */
 blocks: Block[]
}
const {blocks} = Astro.props;
//console.log("BLOCK FROM BLOCK RENDERER COMPONENT: ", blocks);
---
{blocks.map(block => {
    const {styles, classes} = getBlockStyling(block);
    switch(block.name){
        case "core/paragraph":
            return <p class={classes} style={styles} set:html={block.attributes?.content}></p>
        case "core/columns":
        case "core/column":
        case "core/post-content":
            return <div class={classes} style={styles}>
                <BlockRendererInner blocks={ block.innerBlocks || [] }/> {/* Can also use the ?? (nullish coalescing operator) */}
            </div>
        default:
            return null;
    }
})}
{/* Continue from lecture 2.12 - 5:15 */}